/* eslint-disable unused-imports/no-unused-vars */
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { faker } from '@faker-js/faker';

import type { AccountLoginPassword200, AccountLoginPasswordMutationRequest, AccountLoginPasswordMutationResponse } from '../../models/AccountLoginPassword';

import { createCommonResFaker } from '../createCommonResFaker';
import { createJwtResponseFaker } from '../createJwtResponseFaker';

/**
 * @description success
 */
export function createAccountLoginPassword200Faker(data?: Partial<AccountLoginPassword200>): AccountLoginPassword200 {
  faker.seed([2021]);
  return Object.assign({}, createCommonResFaker(), { data: createJwtResponseFaker() });
}

export function createAccountLoginPasswordMutationRequestFaker(data?: Partial<AccountLoginPasswordMutationRequest>): AccountLoginPasswordMutationRequest {
  faker.seed([2021]);
  return {
    ...{ email: faker.internet.email(), password: faker.string.alpha({ length: { min: 6, max: 20 } }) },
    ...(data || {}),
  };
}

export function createAccountLoginPasswordMutationResponseFaker(data?: Partial<AccountLoginPasswordMutationResponse>): AccountLoginPasswordMutationResponse {
  faker.seed([2021]);
  return data || faker.helpers.arrayElement<any>([createAccountLoginPassword200Faker()]);
}
