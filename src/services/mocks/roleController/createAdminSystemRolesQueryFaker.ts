/* eslint-disable unused-imports/no-unused-vars */
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { faker } from '@faker-js/faker';

import type { AdminSystemRolesQuery200, AdminSystemRolesQueryQueryParams, AdminSystemRolesQueryQueryResponse } from '../../models/AdminSystemRolesQuery';

import { createCommonPageResFaker } from '../createCommonPageResFaker';
import { createCommonResFaker } from '../createCommonResFaker';
import { createRoleResFaker } from '../createRoleResFaker';

export function createAdminSystemRolesQueryQueryParamsFaker(data?: Partial<AdminSystemRolesQueryQueryParams>): AdminSystemRolesQueryQueryParams {
  faker.seed([2021]);
  return {
    ...{
      page_no: 1,
      page_size: 10,
      created_at: faker.helpers.multiple(() => faker.number.int(), { count: { min: 0, max: 2 } }),
      updated_at: faker.helpers.multiple(() => faker.number.int(), { count: { min: 0, max: 2 } }),
      role_name: faker.string.alpha(),
      code: '000000',
    },
    ...(data || {}),
  };
}

/**
 * @description success
 */
export function createAdminSystemRolesQuery200Faker(data?: Partial<AdminSystemRolesQuery200>): AdminSystemRolesQuery200 {
  faker.seed([2021]);
  return Object.assign({}, createCommonResFaker(), {
    data: Object.assign({}, createCommonPageResFaker(), { list: faker.helpers.multiple(() => createRoleResFaker()) }),
  });
}

export function createAdminSystemRolesQueryQueryResponseFaker(data?: Partial<AdminSystemRolesQueryQueryResponse>): AdminSystemRolesQueryQueryResponse {
  faker.seed([2021]);
  return data || faker.helpers.arrayElement<any>([createAdminSystemRolesQuery200Faker()]);
}
